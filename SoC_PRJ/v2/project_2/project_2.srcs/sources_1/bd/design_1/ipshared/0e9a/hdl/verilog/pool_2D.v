// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pool_2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ch_div_K_dout,
        ch_div_K_empty_n,
        ch_div_K_read,
        height_in_dout,
        height_in_empty_n,
        height_in_read,
        width_out_dout,
        width_out_empty_n,
        width_out_read,
        Ky_dout,
        Ky_empty_n,
        Ky_read,
        ch_div_K_out_din,
        ch_div_K_out_full_n,
        ch_div_K_out_write,
        width_out_out_din,
        width_out_out_full_n,
        width_out_out_write,
        stream_tp2_V_V_din,
        stream_tp2_V_V_full_n,
        stream_tp2_V_V_write,
        stream_tp_V_V_dout,
        stream_tp_V_V_empty_n,
        stream_tp_V_V_read
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_pp0_stage0 = 9'd128;
parameter    ap_ST_fsm_state46 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] ch_div_K_dout;
input   ch_div_K_empty_n;
output   ch_div_K_read;
input  [31:0] height_in_dout;
input   height_in_empty_n;
output   height_in_read;
input  [31:0] width_out_dout;
input   width_out_empty_n;
output   width_out_read;
input  [31:0] Ky_dout;
input   Ky_empty_n;
output   Ky_read;
output  [31:0] ch_div_K_out_din;
input   ch_div_K_out_full_n;
output   ch_div_K_out_write;
output  [31:0] width_out_out_din;
input   width_out_out_full_n;
output   width_out_out_write;
output  [127:0] stream_tp2_V_V_din;
input   stream_tp2_V_V_full_n;
output   stream_tp2_V_V_write;
input  [127:0] stream_tp_V_V_dout;
input   stream_tp_V_V_empty_n;
output   stream_tp_V_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ch_div_K_read;
reg height_in_read;
reg width_out_read;
reg Ky_read;
reg ch_div_K_out_write;
reg width_out_out_write;
reg stream_tp2_V_V_write;
reg stream_tp_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    buf_V_ce0;
wire   [127:0] buf_V_q0;
reg    buf_V_ce1;
reg    buf_V_we1;
reg    ch_div_K_blk_n;
reg    height_in_blk_n;
reg    width_out_blk_n;
reg    Ky_blk_n;
reg    ch_div_K_out_blk_n;
reg    width_out_out_blk_n;
reg    stream_tp2_V_V_blk_n;
reg    ap_enable_reg_pp0_iter37;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln144_reg_948;
reg    stream_tp_V_V_blk_n;
reg    ap_enable_reg_pp0_iter36;
reg   [0:0] icmp_ln119_reg_862;
reg   [0:0] icmp_ln119_reg_862_pp0_iter35_reg;
reg   [95:0] indvar_flatten22_reg_251;
reg   [63:0] indvar_flatten_reg_262;
reg   [30:0] i_0_i_i_reg_273;
reg   [30:0] j_0_i_i_reg_284;
reg   [31:0] ch_div_K_read_reg_813;
reg    ap_block_state1;
reg   [31:0] height_in_read_reg_818;
reg   [31:0] width_out_read_reg_823;
reg   [31:0] Ky_read_reg_830;
wire   [63:0] bound_fu_301_p2;
reg   [63:0] bound_reg_836;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [95:0] grp_fu_313_p2;
reg   [95:0] bound4_reg_852;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln125_1_fu_319_p2;
reg   [0:0] icmp_ln125_1_reg_857;
wire   [0:0] icmp_ln119_fu_339_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state12_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state16_pp0_stage0_iter8;
wire    ap_block_state17_pp0_stage0_iter9;
wire    ap_block_state18_pp0_stage0_iter10;
wire    ap_block_state19_pp0_stage0_iter11;
wire    ap_block_state20_pp0_stage0_iter12;
wire    ap_block_state21_pp0_stage0_iter13;
wire    ap_block_state22_pp0_stage0_iter14;
wire    ap_block_state23_pp0_stage0_iter15;
wire    ap_block_state24_pp0_stage0_iter16;
wire    ap_block_state25_pp0_stage0_iter17;
wire    ap_block_state26_pp0_stage0_iter18;
wire    ap_block_state27_pp0_stage0_iter19;
wire    ap_block_state28_pp0_stage0_iter20;
wire    ap_block_state29_pp0_stage0_iter21;
wire    ap_block_state30_pp0_stage0_iter22;
wire    ap_block_state31_pp0_stage0_iter23;
wire    ap_block_state32_pp0_stage0_iter24;
wire    ap_block_state33_pp0_stage0_iter25;
wire    ap_block_state34_pp0_stage0_iter26;
wire    ap_block_state35_pp0_stage0_iter27;
wire    ap_block_state36_pp0_stage0_iter28;
wire    ap_block_state37_pp0_stage0_iter29;
wire    ap_block_state38_pp0_stage0_iter30;
wire    ap_block_state39_pp0_stage0_iter31;
wire    ap_block_state40_pp0_stage0_iter32;
wire    ap_block_state41_pp0_stage0_iter33;
wire    ap_block_state42_pp0_stage0_iter34;
wire    ap_block_state43_pp0_stage0_iter35;
reg    ap_block_state44_pp0_stage0_iter36;
reg    ap_block_state45_pp0_stage0_iter37;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln119_reg_862_pp0_iter1_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter2_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter3_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter4_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter5_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter6_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter7_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter8_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter9_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter10_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter11_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter12_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter13_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter14_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter15_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter16_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter17_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter18_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter19_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter20_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter21_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter22_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter23_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter24_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter25_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter26_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter27_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter28_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter29_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter30_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter31_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter32_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter33_reg;
reg   [0:0] icmp_ln119_reg_862_pp0_iter34_reg;
wire   [95:0] add_ln119_fu_344_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [30:0] select_ln122_5_fu_400_p3;
reg   [30:0] select_ln122_5_reg_871;
wire   [30:0] select_ln122_6_fu_414_p3;
reg   [30:0] select_ln122_6_reg_877;
reg   [8:0] buf_V_addr_reg_882;
reg   [8:0] buf_V_addr_reg_882_pp0_iter1_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter2_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter3_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter4_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter5_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter6_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter7_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter8_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter9_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter10_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter11_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter12_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter13_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter14_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter15_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter16_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter17_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter18_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter19_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter20_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter21_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter22_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter23_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter24_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter25_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter26_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter27_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter28_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter29_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter30_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter31_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter32_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter33_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter34_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter35_reg;
reg   [8:0] buf_V_addr_reg_882_pp0_iter36_reg;
wire   [30:0] j_fu_427_p2;
wire   [63:0] select_ln122_7_fu_439_p3;
wire   [15:0] select_ln139_fu_491_p3;
reg   [15:0] select_ln139_reg_908;
wire   [15:0] select_ln139_1_fu_533_p3;
reg   [15:0] select_ln139_1_reg_913;
wire   [15:0] select_ln139_2_fu_575_p3;
reg   [15:0] select_ln139_2_reg_918;
wire   [15:0] select_ln139_3_fu_617_p3;
reg   [15:0] select_ln139_3_reg_923;
wire   [15:0] select_ln139_4_fu_659_p3;
reg   [15:0] select_ln139_4_reg_928;
wire   [15:0] select_ln139_5_fu_701_p3;
reg   [15:0] select_ln139_5_reg_933;
wire   [15:0] select_ln139_6_fu_743_p3;
reg   [15:0] select_ln139_6_reg_938;
wire   [15:0] select_ln139_7_fu_785_p3;
reg   [15:0] select_ln139_7_reg_943;
wire   [0:0] icmp_ln144_fu_793_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg   [30:0] ap_phi_mux_i_0_i_i_phi_fu_277_p4;
wire   [63:0] zext_ln135_fu_422_p1;
wire   [127:0] tmp_V_fu_799_p9;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] bound_fu_301_p0;
wire   [31:0] bound_fu_301_p1;
wire   [63:0] grp_fu_313_p0;
wire   [31:0] grp_fu_313_p1;
wire   [31:0] zext_ln125_fu_330_p1;
wire   [0:0] icmp_ln122_fu_350_p2;
wire   [30:0] i_fu_324_p2;
wire   [0:0] icmp_ln125_fu_334_p2;
wire   [30:0] select_ln122_fu_355_p3;
wire   [0:0] select_ln122_3_fu_379_p3;
wire   [30:0] select_ln122_1_fu_363_p3;
wire   [30:0] add_ln144_fu_386_p2;
wire   [30:0] select_ln122_2_fu_371_p3;
wire   [30:0] add_ln144_1_fu_408_p2;
wire   [30:0] select_ln122_4_fu_392_p3;
wire   [63:0] add_ln122_fu_433_p2;
wire   [31:0] grp_fu_453_p0;
wire   [31:0] grp_fu_458_p0;
wire   [31:0] grp_fu_453_p2;
wire   [15:0] trunc_ln647_1_fu_473_p1;
wire   [15:0] trunc_ln647_fu_469_p1;
wire   [0:0] icmp_ln895_fu_477_p2;
wire   [0:0] icmp_ln139_fu_463_p2;
wire   [15:0] select_ln142_fu_483_p3;
wire   [15:0] ret_V_1_i_i_fu_509_p4;
wire   [15:0] p_Result_i_i_fu_499_p4;
wire   [0:0] icmp_ln895_1_fu_519_p2;
wire   [15:0] select_ln142_1_fu_525_p3;
wire   [15:0] ret_V_2_i_i_fu_551_p4;
wire   [15:0] p_Result_8_i_i_fu_541_p4;
wire   [0:0] icmp_ln895_2_fu_561_p2;
wire   [15:0] select_ln142_2_fu_567_p3;
wire   [15:0] ret_V_3_i_i_fu_593_p4;
wire   [15:0] p_Result_9_i_i_fu_583_p4;
wire   [0:0] icmp_ln895_3_fu_603_p2;
wire   [15:0] select_ln142_3_fu_609_p3;
wire   [15:0] ret_V_4_i_i_fu_635_p4;
wire   [15:0] p_Result_4_i_i_fu_625_p4;
wire   [0:0] icmp_ln895_4_fu_645_p2;
wire   [15:0] select_ln142_4_fu_651_p3;
wire   [15:0] ret_V_5_i_i_fu_677_p4;
wire   [15:0] p_Result_5_i_i_fu_667_p4;
wire   [0:0] icmp_ln895_5_fu_687_p2;
wire   [15:0] select_ln142_5_fu_693_p3;
wire   [15:0] ret_V_6_i_i_fu_719_p4;
wire   [15:0] p_Result_6_i_i_fu_709_p4;
wire   [0:0] icmp_ln895_6_fu_729_p2;
wire   [15:0] select_ln142_6_fu_735_p3;
wire   [15:0] ret_V_7_i_i_fu_761_p4;
wire   [15:0] p_Result_7_i_i_fu_751_p4;
wire   [0:0] icmp_ln895_7_fu_771_p2;
wire   [15:0] select_ln142_7_fu_777_p3;
wire   [31:0] grp_fu_458_p2;
reg    grp_fu_453_ce;
reg    grp_fu_458_ce;
wire    ap_CS_fsm_state46;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] bound_fu_301_p00;
wire   [63:0] bound_fu_301_p10;
wire   [95:0] grp_fu_313_p00;
wire   [95:0] grp_fu_313_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
end

pool_2D_buf_V #(
    .DataWidth( 128 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_addr_reg_882_pp0_iter34_reg),
    .ce0(buf_V_ce0),
    .q0(buf_V_q0),
    .address1(buf_V_addr_reg_882_pp0_iter36_reg),
    .ce1(buf_V_ce1),
    .we1(buf_V_we1),
    .d1(tmp_V_fu_799_p9)
);

pool_mul_64ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 96 ))
pool_mul_64ns_32nbkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_313_p0),
    .din1(grp_fu_313_p1),
    .ce(1'b1),
    .dout(grp_fu_313_p2)
);

pool_srem_32ns_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pool_srem_32ns_32cud_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .din1(Ky_read_reg_830),
    .ce(grp_fu_453_ce),
    .dout(grp_fu_453_p2)
);

pool_srem_32ns_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pool_srem_32ns_32cud_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_458_p0),
    .din1(Ky_read_reg_830),
    .ce(grp_fu_458_ce),
    .dout(grp_fu_458_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state8)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_reg_862 == 1'd0))) begin
        i_0_i_i_reg_273 <= select_ln122_5_reg_871;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_i_i_reg_273 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_339_p2 == 1'd0))) begin
        indvar_flatten22_reg_251 <= add_ln119_fu_344_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten22_reg_251 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_339_p2 == 1'd0))) begin
        indvar_flatten_reg_262 <= select_ln122_7_fu_439_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_262 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_339_p2 == 1'd0))) begin
        j_0_i_i_reg_284 <= j_fu_427_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_0_i_i_reg_284 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        Ky_read_reg_830 <= Ky_dout;
        ch_div_K_read_reg_813 <= ch_div_K_dout;
        height_in_read_reg_818 <= height_in_dout;
        width_out_read_reg_823 <= width_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bound4_reg_852 <= grp_fu_313_p2;
        icmp_ln125_1_reg_857 <= icmp_ln125_1_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_836 <= bound_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_339_p2 == 1'd0))) begin
        buf_V_addr_reg_882 <= zext_ln135_fu_422_p1;
        select_ln122_6_reg_877 <= select_ln122_6_fu_414_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buf_V_addr_reg_882_pp0_iter10_reg <= buf_V_addr_reg_882_pp0_iter9_reg;
        buf_V_addr_reg_882_pp0_iter11_reg <= buf_V_addr_reg_882_pp0_iter10_reg;
        buf_V_addr_reg_882_pp0_iter12_reg <= buf_V_addr_reg_882_pp0_iter11_reg;
        buf_V_addr_reg_882_pp0_iter13_reg <= buf_V_addr_reg_882_pp0_iter12_reg;
        buf_V_addr_reg_882_pp0_iter14_reg <= buf_V_addr_reg_882_pp0_iter13_reg;
        buf_V_addr_reg_882_pp0_iter15_reg <= buf_V_addr_reg_882_pp0_iter14_reg;
        buf_V_addr_reg_882_pp0_iter16_reg <= buf_V_addr_reg_882_pp0_iter15_reg;
        buf_V_addr_reg_882_pp0_iter17_reg <= buf_V_addr_reg_882_pp0_iter16_reg;
        buf_V_addr_reg_882_pp0_iter18_reg <= buf_V_addr_reg_882_pp0_iter17_reg;
        buf_V_addr_reg_882_pp0_iter19_reg <= buf_V_addr_reg_882_pp0_iter18_reg;
        buf_V_addr_reg_882_pp0_iter20_reg <= buf_V_addr_reg_882_pp0_iter19_reg;
        buf_V_addr_reg_882_pp0_iter21_reg <= buf_V_addr_reg_882_pp0_iter20_reg;
        buf_V_addr_reg_882_pp0_iter22_reg <= buf_V_addr_reg_882_pp0_iter21_reg;
        buf_V_addr_reg_882_pp0_iter23_reg <= buf_V_addr_reg_882_pp0_iter22_reg;
        buf_V_addr_reg_882_pp0_iter24_reg <= buf_V_addr_reg_882_pp0_iter23_reg;
        buf_V_addr_reg_882_pp0_iter25_reg <= buf_V_addr_reg_882_pp0_iter24_reg;
        buf_V_addr_reg_882_pp0_iter26_reg <= buf_V_addr_reg_882_pp0_iter25_reg;
        buf_V_addr_reg_882_pp0_iter27_reg <= buf_V_addr_reg_882_pp0_iter26_reg;
        buf_V_addr_reg_882_pp0_iter28_reg <= buf_V_addr_reg_882_pp0_iter27_reg;
        buf_V_addr_reg_882_pp0_iter29_reg <= buf_V_addr_reg_882_pp0_iter28_reg;
        buf_V_addr_reg_882_pp0_iter2_reg <= buf_V_addr_reg_882_pp0_iter1_reg;
        buf_V_addr_reg_882_pp0_iter30_reg <= buf_V_addr_reg_882_pp0_iter29_reg;
        buf_V_addr_reg_882_pp0_iter31_reg <= buf_V_addr_reg_882_pp0_iter30_reg;
        buf_V_addr_reg_882_pp0_iter32_reg <= buf_V_addr_reg_882_pp0_iter31_reg;
        buf_V_addr_reg_882_pp0_iter33_reg <= buf_V_addr_reg_882_pp0_iter32_reg;
        buf_V_addr_reg_882_pp0_iter34_reg <= buf_V_addr_reg_882_pp0_iter33_reg;
        buf_V_addr_reg_882_pp0_iter35_reg <= buf_V_addr_reg_882_pp0_iter34_reg;
        buf_V_addr_reg_882_pp0_iter36_reg <= buf_V_addr_reg_882_pp0_iter35_reg;
        buf_V_addr_reg_882_pp0_iter3_reg <= buf_V_addr_reg_882_pp0_iter2_reg;
        buf_V_addr_reg_882_pp0_iter4_reg <= buf_V_addr_reg_882_pp0_iter3_reg;
        buf_V_addr_reg_882_pp0_iter5_reg <= buf_V_addr_reg_882_pp0_iter4_reg;
        buf_V_addr_reg_882_pp0_iter6_reg <= buf_V_addr_reg_882_pp0_iter5_reg;
        buf_V_addr_reg_882_pp0_iter7_reg <= buf_V_addr_reg_882_pp0_iter6_reg;
        buf_V_addr_reg_882_pp0_iter8_reg <= buf_V_addr_reg_882_pp0_iter7_reg;
        buf_V_addr_reg_882_pp0_iter9_reg <= buf_V_addr_reg_882_pp0_iter8_reg;
        icmp_ln119_reg_862_pp0_iter10_reg <= icmp_ln119_reg_862_pp0_iter9_reg;
        icmp_ln119_reg_862_pp0_iter11_reg <= icmp_ln119_reg_862_pp0_iter10_reg;
        icmp_ln119_reg_862_pp0_iter12_reg <= icmp_ln119_reg_862_pp0_iter11_reg;
        icmp_ln119_reg_862_pp0_iter13_reg <= icmp_ln119_reg_862_pp0_iter12_reg;
        icmp_ln119_reg_862_pp0_iter14_reg <= icmp_ln119_reg_862_pp0_iter13_reg;
        icmp_ln119_reg_862_pp0_iter15_reg <= icmp_ln119_reg_862_pp0_iter14_reg;
        icmp_ln119_reg_862_pp0_iter16_reg <= icmp_ln119_reg_862_pp0_iter15_reg;
        icmp_ln119_reg_862_pp0_iter17_reg <= icmp_ln119_reg_862_pp0_iter16_reg;
        icmp_ln119_reg_862_pp0_iter18_reg <= icmp_ln119_reg_862_pp0_iter17_reg;
        icmp_ln119_reg_862_pp0_iter19_reg <= icmp_ln119_reg_862_pp0_iter18_reg;
        icmp_ln119_reg_862_pp0_iter20_reg <= icmp_ln119_reg_862_pp0_iter19_reg;
        icmp_ln119_reg_862_pp0_iter21_reg <= icmp_ln119_reg_862_pp0_iter20_reg;
        icmp_ln119_reg_862_pp0_iter22_reg <= icmp_ln119_reg_862_pp0_iter21_reg;
        icmp_ln119_reg_862_pp0_iter23_reg <= icmp_ln119_reg_862_pp0_iter22_reg;
        icmp_ln119_reg_862_pp0_iter24_reg <= icmp_ln119_reg_862_pp0_iter23_reg;
        icmp_ln119_reg_862_pp0_iter25_reg <= icmp_ln119_reg_862_pp0_iter24_reg;
        icmp_ln119_reg_862_pp0_iter26_reg <= icmp_ln119_reg_862_pp0_iter25_reg;
        icmp_ln119_reg_862_pp0_iter27_reg <= icmp_ln119_reg_862_pp0_iter26_reg;
        icmp_ln119_reg_862_pp0_iter28_reg <= icmp_ln119_reg_862_pp0_iter27_reg;
        icmp_ln119_reg_862_pp0_iter29_reg <= icmp_ln119_reg_862_pp0_iter28_reg;
        icmp_ln119_reg_862_pp0_iter2_reg <= icmp_ln119_reg_862_pp0_iter1_reg;
        icmp_ln119_reg_862_pp0_iter30_reg <= icmp_ln119_reg_862_pp0_iter29_reg;
        icmp_ln119_reg_862_pp0_iter31_reg <= icmp_ln119_reg_862_pp0_iter30_reg;
        icmp_ln119_reg_862_pp0_iter32_reg <= icmp_ln119_reg_862_pp0_iter31_reg;
        icmp_ln119_reg_862_pp0_iter33_reg <= icmp_ln119_reg_862_pp0_iter32_reg;
        icmp_ln119_reg_862_pp0_iter34_reg <= icmp_ln119_reg_862_pp0_iter33_reg;
        icmp_ln119_reg_862_pp0_iter35_reg <= icmp_ln119_reg_862_pp0_iter34_reg;
        icmp_ln119_reg_862_pp0_iter3_reg <= icmp_ln119_reg_862_pp0_iter2_reg;
        icmp_ln119_reg_862_pp0_iter4_reg <= icmp_ln119_reg_862_pp0_iter3_reg;
        icmp_ln119_reg_862_pp0_iter5_reg <= icmp_ln119_reg_862_pp0_iter4_reg;
        icmp_ln119_reg_862_pp0_iter6_reg <= icmp_ln119_reg_862_pp0_iter5_reg;
        icmp_ln119_reg_862_pp0_iter7_reg <= icmp_ln119_reg_862_pp0_iter6_reg;
        icmp_ln119_reg_862_pp0_iter8_reg <= icmp_ln119_reg_862_pp0_iter7_reg;
        icmp_ln119_reg_862_pp0_iter9_reg <= icmp_ln119_reg_862_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_addr_reg_882_pp0_iter1_reg <= buf_V_addr_reg_882;
        icmp_ln119_reg_862 <= icmp_ln119_fu_339_p2;
        icmp_ln119_reg_862_pp0_iter1_reg <= icmp_ln119_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0))) begin
        icmp_ln144_reg_948 <= icmp_ln144_fu_793_p2;
        select_ln139_1_reg_913 <= select_ln139_1_fu_533_p3;
        select_ln139_2_reg_918 <= select_ln139_2_fu_575_p3;
        select_ln139_3_reg_923 <= select_ln139_3_fu_617_p3;
        select_ln139_4_reg_928 <= select_ln139_4_fu_659_p3;
        select_ln139_5_reg_933 <= select_ln139_5_fu_701_p3;
        select_ln139_6_reg_938 <= select_ln139_6_fu_743_p3;
        select_ln139_7_reg_943 <= select_ln139_7_fu_785_p3;
        select_ln139_reg_908 <= select_ln139_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_339_p2 == 1'd0))) begin
        select_ln122_5_reg_871 <= select_ln122_5_fu_400_p3;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        Ky_blk_n = Ky_empty_n;
    end else begin
        Ky_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        Ky_read = 1'b1;
    end else begin
        Ky_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_fu_339_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_reg_862 == 1'd0))) begin
        ap_phi_mux_i_0_i_i_phi_fu_277_p4 = select_ln122_5_reg_871;
    end else begin
        ap_phi_mux_i_0_i_i_phi_fu_277_p4 = i_0_i_i_reg_273;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_948 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_div_K_blk_n = ch_div_K_empty_n;
    end else begin
        ch_div_K_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_div_K_out_blk_n = ch_div_K_out_full_n;
    end else begin
        ch_div_K_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_div_K_out_write = 1'b1;
    end else begin
        ch_div_K_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_div_K_read = 1'b1;
    end else begin
        ch_div_K_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_453_ce = 1'b1;
    end else begin
        grp_fu_453_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_458_ce = 1'b1;
    end else begin
        grp_fu_458_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_in_blk_n = height_in_empty_n;
    end else begin
        height_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_in_read = 1'b1;
    end else begin
        height_in_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_948 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        stream_tp2_V_V_blk_n = stream_tp2_V_V_full_n;
    end else begin
        stream_tp2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_948 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        stream_tp2_V_V_write = 1'b1;
    end else begin
        stream_tp2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0))) begin
        stream_tp_V_V_blk_n = stream_tp_V_V_empty_n;
    end else begin
        stream_tp_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0))) begin
        stream_tp_V_V_read = 1'b1;
    end else begin
        stream_tp_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_blk_n = width_out_empty_n;
    end else begin
        width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_out_blk_n = width_out_out_full_n;
    end else begin
        width_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_out_write = 1'b1;
    end else begin
        width_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_out_read = 1'b1;
    end else begin
        width_out_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln119_fu_339_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter37 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((icmp_ln119_fu_339_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln119_fu_344_p2 = (indvar_flatten22_reg_251 + 96'd1);

assign add_ln122_fu_433_p2 = (indvar_flatten_reg_262 + 64'd1);

assign add_ln144_1_fu_408_p2 = (31'd2 + select_ln122_fu_355_p3);

assign add_ln144_fu_386_p2 = (31'd1 + select_ln122_fu_355_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((stream_tp_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0)) | ((icmp_ln144_reg_948 == 1'd1) & (stream_tp2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_tp_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0)) | ((icmp_ln144_reg_948 == 1'd1) & (stream_tp2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_tp_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0)) | ((icmp_ln144_reg_948 == 1'd1) & (stream_tp2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((width_out_out_full_n == 1'b0) | (ch_div_K_out_full_n == 1'b0) | (1'b0 == Ky_empty_n) | (width_out_empty_n == 1'b0) | (height_in_empty_n == 1'b0) | (ch_div_K_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp0_stage0_iter36 = ((stream_tp_V_V_empty_n == 1'b0) & (icmp_ln119_reg_862_pp0_iter35_reg == 1'd0));
end

always @ (*) begin
    ap_block_state45_pp0_stage0_iter37 = ((icmp_ln144_reg_948 == 1'd1) & (stream_tp2_V_V_full_n == 1'b0));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_301_p0 = bound_fu_301_p00;

assign bound_fu_301_p00 = width_out_read_reg_823;

assign bound_fu_301_p1 = bound_fu_301_p10;

assign bound_fu_301_p10 = height_in_read_reg_818;

assign bound_fu_301_p2 = (bound_fu_301_p0 * bound_fu_301_p1);

assign ch_div_K_out_din = ch_div_K_dout;

assign grp_fu_313_p0 = grp_fu_313_p00;

assign grp_fu_313_p00 = bound_reg_836;

assign grp_fu_313_p1 = grp_fu_313_p10;

assign grp_fu_313_p10 = ch_div_K_read_reg_813;

assign grp_fu_453_p0 = select_ln122_5_reg_871;

assign grp_fu_458_p0 = select_ln122_6_reg_877;

assign i_fu_324_p2 = (ap_phi_mux_i_0_i_i_phi_fu_277_p4 + 31'd1);

assign icmp_ln119_fu_339_p2 = ((indvar_flatten22_reg_251 == bound4_reg_852) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_350_p2 = ((indvar_flatten_reg_262 == bound_reg_836) ? 1'b1 : 1'b0);

assign icmp_ln125_1_fu_319_p2 = (($signed(width_out_read_reg_823) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_334_p2 = (($signed(zext_ln125_fu_330_p1) < $signed(width_out_read_reg_823)) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_463_p2 = ((grp_fu_453_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_793_p2 = ((grp_fu_458_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_519_p2 = (($signed(ret_V_1_i_i_fu_509_p4) > $signed(p_Result_i_i_fu_499_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_561_p2 = (($signed(ret_V_2_i_i_fu_551_p4) > $signed(p_Result_8_i_i_fu_541_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_603_p2 = (($signed(ret_V_3_i_i_fu_593_p4) > $signed(p_Result_9_i_i_fu_583_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_645_p2 = (($signed(ret_V_4_i_i_fu_635_p4) > $signed(p_Result_4_i_i_fu_625_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_687_p2 = (($signed(ret_V_5_i_i_fu_677_p4) > $signed(p_Result_5_i_i_fu_667_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_729_p2 = (($signed(ret_V_6_i_i_fu_719_p4) > $signed(p_Result_6_i_i_fu_709_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_771_p2 = (($signed(ret_V_7_i_i_fu_761_p4) > $signed(p_Result_7_i_i_fu_751_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_477_p2 = (($signed(trunc_ln647_1_fu_473_p1) > $signed(trunc_ln647_fu_469_p1)) ? 1'b1 : 1'b0);

assign j_fu_427_p2 = (select_ln122_4_fu_392_p3 + 31'd1);

assign p_Result_4_i_i_fu_625_p4 = {{stream_tp_V_V_dout[79:64]}};

assign p_Result_5_i_i_fu_667_p4 = {{stream_tp_V_V_dout[95:80]}};

assign p_Result_6_i_i_fu_709_p4 = {{stream_tp_V_V_dout[111:96]}};

assign p_Result_7_i_i_fu_751_p4 = {{stream_tp_V_V_dout[127:112]}};

assign p_Result_8_i_i_fu_541_p4 = {{stream_tp_V_V_dout[47:32]}};

assign p_Result_9_i_i_fu_583_p4 = {{stream_tp_V_V_dout[63:48]}};

assign p_Result_i_i_fu_499_p4 = {{stream_tp_V_V_dout[31:16]}};

assign ret_V_1_i_i_fu_509_p4 = {{buf_V_q0[31:16]}};

assign ret_V_2_i_i_fu_551_p4 = {{buf_V_q0[47:32]}};

assign ret_V_3_i_i_fu_593_p4 = {{buf_V_q0[63:48]}};

assign ret_V_4_i_i_fu_635_p4 = {{buf_V_q0[79:64]}};

assign ret_V_5_i_i_fu_677_p4 = {{buf_V_q0[95:80]}};

assign ret_V_6_i_i_fu_719_p4 = {{buf_V_q0[111:96]}};

assign ret_V_7_i_i_fu_761_p4 = {{buf_V_q0[127:112]}};

assign select_ln122_1_fu_363_p3 = ((icmp_ln122_fu_350_p2[0:0] === 1'b1) ? 31'd0 : j_0_i_i_reg_284);

assign select_ln122_2_fu_371_p3 = ((icmp_ln122_fu_350_p2[0:0] === 1'b1) ? 31'd1 : i_fu_324_p2);

assign select_ln122_3_fu_379_p3 = ((icmp_ln122_fu_350_p2[0:0] === 1'b1) ? icmp_ln125_1_reg_857 : icmp_ln125_fu_334_p2);

assign select_ln122_4_fu_392_p3 = ((select_ln122_3_fu_379_p3[0:0] === 1'b1) ? select_ln122_1_fu_363_p3 : 31'd0);

assign select_ln122_5_fu_400_p3 = ((select_ln122_3_fu_379_p3[0:0] === 1'b1) ? select_ln122_fu_355_p3 : add_ln144_fu_386_p2);

assign select_ln122_6_fu_414_p3 = ((select_ln122_3_fu_379_p3[0:0] === 1'b1) ? select_ln122_2_fu_371_p3 : add_ln144_1_fu_408_p2);

assign select_ln122_7_fu_439_p3 = ((icmp_ln122_fu_350_p2[0:0] === 1'b1) ? 64'd1 : add_ln122_fu_433_p2);

assign select_ln122_fu_355_p3 = ((icmp_ln122_fu_350_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_i_0_i_i_phi_fu_277_p4);

assign select_ln139_1_fu_533_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_i_i_fu_499_p4 : select_ln142_1_fu_525_p3);

assign select_ln139_2_fu_575_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_8_i_i_fu_541_p4 : select_ln142_2_fu_567_p3);

assign select_ln139_3_fu_617_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_9_i_i_fu_583_p4 : select_ln142_3_fu_609_p3);

assign select_ln139_4_fu_659_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_4_i_i_fu_625_p4 : select_ln142_4_fu_651_p3);

assign select_ln139_5_fu_701_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_5_i_i_fu_667_p4 : select_ln142_5_fu_693_p3);

assign select_ln139_6_fu_743_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_6_i_i_fu_709_p4 : select_ln142_6_fu_735_p3);

assign select_ln139_7_fu_785_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? p_Result_7_i_i_fu_751_p4 : select_ln142_7_fu_777_p3);

assign select_ln139_fu_491_p3 = ((icmp_ln139_fu_463_p2[0:0] === 1'b1) ? trunc_ln647_fu_469_p1 : select_ln142_fu_483_p3);

assign select_ln142_1_fu_525_p3 = ((icmp_ln895_1_fu_519_p2[0:0] === 1'b1) ? ret_V_1_i_i_fu_509_p4 : p_Result_i_i_fu_499_p4);

assign select_ln142_2_fu_567_p3 = ((icmp_ln895_2_fu_561_p2[0:0] === 1'b1) ? ret_V_2_i_i_fu_551_p4 : p_Result_8_i_i_fu_541_p4);

assign select_ln142_3_fu_609_p3 = ((icmp_ln895_3_fu_603_p2[0:0] === 1'b1) ? ret_V_3_i_i_fu_593_p4 : p_Result_9_i_i_fu_583_p4);

assign select_ln142_4_fu_651_p3 = ((icmp_ln895_4_fu_645_p2[0:0] === 1'b1) ? ret_V_4_i_i_fu_635_p4 : p_Result_4_i_i_fu_625_p4);

assign select_ln142_5_fu_693_p3 = ((icmp_ln895_5_fu_687_p2[0:0] === 1'b1) ? ret_V_5_i_i_fu_677_p4 : p_Result_5_i_i_fu_667_p4);

assign select_ln142_6_fu_735_p3 = ((icmp_ln895_6_fu_729_p2[0:0] === 1'b1) ? ret_V_6_i_i_fu_719_p4 : p_Result_6_i_i_fu_709_p4);

assign select_ln142_7_fu_777_p3 = ((icmp_ln895_7_fu_771_p2[0:0] === 1'b1) ? ret_V_7_i_i_fu_761_p4 : p_Result_7_i_i_fu_751_p4);

assign select_ln142_fu_483_p3 = ((icmp_ln895_fu_477_p2[0:0] === 1'b1) ? trunc_ln647_1_fu_473_p1 : trunc_ln647_fu_469_p1);

assign stream_tp2_V_V_din = tmp_V_fu_799_p9;

assign tmp_V_fu_799_p9 = {{{{{{{{select_ln139_7_reg_943}, {select_ln139_6_reg_938}}, {select_ln139_5_reg_933}}, {select_ln139_4_reg_928}}, {select_ln139_3_reg_923}}, {select_ln139_2_reg_918}}, {select_ln139_1_reg_913}}, {select_ln139_reg_908}};

assign trunc_ln647_1_fu_473_p1 = buf_V_q0[15:0];

assign trunc_ln647_fu_469_p1 = stream_tp_V_V_dout[15:0];

assign width_out_out_din = width_out_dout;

assign zext_ln125_fu_330_p1 = j_0_i_i_reg_284;

assign zext_ln135_fu_422_p1 = select_ln122_4_fu_392_p3;

endmodule //pool_2D
