Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
| Date         : Sun Jan 16 10:03:14 2022
| Host         : DESKTOP-816BTIT running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Fully Routed
------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 136
+----------+----------+------------------------------+------------+
| Rule     | Severity | Description                  | Violations |
+----------+----------+------------------------------+------------+
| DPIP-1   | Warning  | Input pipelining             | 46         |
| DPOP-1   | Warning  | PREG Output pipelining       | 34         |
| DPOP-2   | Warning  | MREG Output pipelining       | 47         |
| DPREG-4  | Warning  | DSP48E1_PregDynOpmodeZmuxP:  | 2          |
| REQP-31  | Advisory | enum_PREG_0_connects_CEP_GND | 1          |
| REQP-165 | Advisory | writefirst                   | 2          |
| REQP-181 | Advisory | writefirst                   | 4          |
+----------+----------+------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2 input design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2 input design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2 input design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2 input design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/bound4_reg_2715_reg input design_1_i/conv_0/inst/bound4_reg_2715_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/bound52_fu_1017_p2 input design_1_i/conv_0/inst/bound52_fu_1017_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/bound52_fu_1017_p2 input design_1_i/conv_0/inst/bound52_fu_1017_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/bound52_reg_2725_reg input design_1_i/conv_0/inst/bound52_reg_2725_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/bound52_reg_2725_reg input design_1_i/conv_0/inst/bound52_reg_2725_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/m/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/m/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U20/conv_mac_muladd_1ncg_DSP48_10_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/m/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/m/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/m/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/m/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U24/conv_mac_muladd_1ncg_DSP48_10_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/m/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/m input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/m/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p input design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p input design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p input design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p input design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p input design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p input design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p input design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p input design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_4_reg_2838_reg input design_1_i/conv_0/inst/mul_ln1352_4_reg_2838_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2 input design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_9_reg_2992_reg input design_1_i/conv_0/inst/mul_ln1352_9_reg_2992_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/mul_ln1598_1_reg_2877_reg input design_1_i/conv_0/inst/mul_ln1598_1_reg_2877_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/p_0_out0 input design_1_i/conv_0/inst/p_0_out0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/p_0_out0 input design_1_i/conv_0/inst/p_0_out0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/ret_V_10_fu_1203_p2 input design_1_i/conv_0/inst/ret_V_10_fu_1203_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/ret_V_10_reg_2828_reg input design_1_i/conv_0/inst/ret_V_10_reg_2828_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/ret_V_6_reg_2911_reg input design_1_i/conv_0/inst/ret_V_6_reg_2911_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2 input design_1_i/conv_0/inst/ret_V_7_fu_1628_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0 input design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg input design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2 input design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0 input design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2 output design_1_i/conv_0/inst/add_ln700_2_fu_1925_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2 output design_1_i/conv_0/inst/add_ln700_5_fu_1941_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/bound52_fu_1017_p2 output design_1_i/conv_0/inst/bound52_fu_1017_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p output design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p output design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p output design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p output design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U7/conv_mul_mul_16nsfYi_DSP48_2_U/p output design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U7/conv_mul_mul_16nsfYi_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p output design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsjbC_U12/conv_mul_mul_16nsjbC_DSP48_6_U/p output design_1_i/conv_0/inst/conv_mul_mul_16nsjbC_U12/conv_mul_mul_16nsjbC_DSP48_6_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nspcA_U28/conv_mul_mul_16nspcA_DSP48_12_U/p output design_1_i/conv_0/inst/conv_mul_mul_16nspcA_U28/conv_mul_mul_16nspcA_DSP48_12_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_hbi_U10/conv_mul_mul_16s_hbi_DSP48_4_U/p output design_1_i/conv_0/inst/conv_mul_mul_16s_hbi_U10/conv_mul_mul_16s_hbi_DSP48_4_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p output design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p output design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_dEe_U4/conv_mul_mul_8ns_dEe_DSP48_0_U/p output design_1_i/conv_0/inst/conv_mul_mul_8ns_dEe_U4/conv_mul_mul_8ns_dEe_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_ibs_U11/conv_mul_mul_8ns_ibs_DSP48_5_U/p output design_1_i/conv_0/inst/conv_mul_mul_8ns_ibs_U11/conv_mul_mul_8ns_ibs_DSP48_5_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U17/conv_mul_mul_8ns_lbW_DSP48_8_U/p output design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U17/conv_mul_mul_8ns_lbW_DSP48_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U19/conv_mul_mul_8ns_lbW_DSP48_8_U/p output design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U19/conv_mul_mul_8ns_lbW_DSP48_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_4_fu_1211_p2 output design_1_i/conv_0/inst/mul_ln1352_4_fu_1211_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2 output design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/p_0_out0 output design_1_i/conv_0/inst/p_0_out0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_10_fu_1203_p2 output design_1_i/conv_0/inst/ret_V_10_fu_1203_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2 output design_1_i/conv_0/inst/ret_V_7_fu_1628_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0 output design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/select_ln1598_1_fu_1080_p3 output design_1_i/conv_0/inst/select_ln1598_1_fu_1080_p3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg output design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0 output design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2__0 output design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2 output design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2__0 output design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/tmp_product output design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2 output design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2__0 output design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/tmp_product output design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/bound4_reg_2715_reg multiplier stage design_1_i/conv_0/inst/bound4_reg_2715_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/bound52_fu_1017_p2 multiplier stage design_1_i/conv_0/inst/bound52_fu_1017_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/bound52_reg_2725_reg multiplier stage design_1_i/conv_0/inst/bound52_reg_2725_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p multiplier stage design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U22/conv_mac_muladd_1ncg_DSP48_10_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p multiplier stage design_1_i/conv_0/inst/conv_mac_muladd_1ncg_U26/conv_mac_muladd_1ncg_DSP48_10_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p multiplier stage design_1_i/conv_0/inst/conv_mac_muladd_2mb6_U18/conv_mac_muladd_2mb6_DSP48_9_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U6/conv_mul_mul_16nsfYi_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U7/conv_mul_mul_16nsfYi_DSP48_2_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U7/conv_mul_mul_16nsfYi_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nsjbC_U12/conv_mul_mul_16nsjbC_DSP48_6_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16nsjbC_U12/conv_mul_mul_16nsjbC_DSP48_6_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16nspcA_U28/conv_mul_mul_16nspcA_DSP48_12_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16nspcA_U28/conv_mul_mul_16nspcA_DSP48_12_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_hbi_U10/conv_mul_mul_16s_hbi_DSP48_4_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16s_hbi_U10/conv_mul_mul_16s_hbi_DSP48_4_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U13/conv_mul_mul_16s_kbM_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_16s_kbM_U14/conv_mul_mul_16s_kbM_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_dEe_U4/conv_mul_mul_8ns_dEe_DSP48_0_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_8ns_dEe_U4/conv_mul_mul_8ns_dEe_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_ibs_U11/conv_mul_mul_8ns_ibs_DSP48_5_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_8ns_ibs_U11/conv_mul_mul_8ns_ibs_DSP48_5_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U17/conv_mul_mul_8ns_lbW_DSP48_8_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U17/conv_mul_mul_8ns_lbW_DSP48_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U19/conv_mul_mul_8ns_lbW_DSP48_8_U/p multiplier stage design_1_i/conv_0/inst/conv_mul_mul_8ns_lbW_U19/conv_mul_mul_8ns_lbW_DSP48_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_4_fu_1211_p2 multiplier stage design_1_i/conv_0/inst/mul_ln1352_4_fu_1211_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_4_reg_2838_reg multiplier stage design_1_i/conv_0/inst/mul_ln1352_4_reg_2838_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2 multiplier stage design_1_i/conv_0/inst/mul_ln1352_9_fu_2224_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1352_9_reg_2992_reg multiplier stage design_1_i/conv_0/inst/mul_ln1352_9_reg_2992_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/mul_ln1598_1_reg_2877_reg multiplier stage design_1_i/conv_0/inst/mul_ln1598_1_reg_2877_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_10_fu_1203_p2 multiplier stage design_1_i/conv_0/inst/ret_V_10_fu_1203_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_10_reg_2828_reg multiplier stage design_1_i/conv_0/inst/ret_V_10_reg_2828_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_6_reg_2911_reg multiplier stage design_1_i/conv_0/inst/ret_V_6_reg_2911_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2 multiplier stage design_1_i/conv_0/inst/ret_V_7_fu_1628_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0 multiplier stage design_1_i/conv_0/inst/ret_V_7_fu_1628_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/select_ln1598_1_fu_1080_p3 multiplier stage design_1_i/conv_0/inst/select_ln1598_1_fu_1080_p3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg multiplier stage design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2 multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0 multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_fu_148_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_reg_197_reg multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_1_reg_197_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2 multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2__0 multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_fu_144_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_reg_192_reg multiplier stage design_1_i/pool_0/inst/hs2axis_U0/mul_ln48_reg_192_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2 multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2__0 multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/bound_fu_312_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_reg_792_reg multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/bound_reg_792_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/bound_reg_792_reg__0 multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/bound_reg_792_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg__1 multiplier stage design_1_i/pool_0/inst/pool_1D54_U0/pool_mul_64ns_32nbkb_U1/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2 multiplier stage design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2__0 multiplier stage design_1_i/pool_0/inst/pool_2D_U0/bound_fu_301_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_reg_836_reg multiplier stage design_1_i/pool_0/inst/pool_2D_U0/bound_reg_836_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/bound_reg_836_reg__0 multiplier stage design_1_i/pool_0/inst/pool_2D_U0/bound_reg_836_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg multiplier stage design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg__1 multiplier stage design_1_i/pool_0/inst/pool_2D_U0/pool_mul_64ns_32nbkb_U20/pool_mul_64ns_32nbkb_MulnS_0_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPREG-4#1 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell design_1_i/conv_0/inst/conv_mul_mul_16nsfYi_U8/conv_mul_mul_16nsfYi_DSP48_2_U/p with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

DPREG-4#2 Warning
DSP48E1_PregDynOpmodeZmuxP:  
The DSP48E1 cell design_1_i/conv_0/inst/p_0_out0 with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
Related violations: <none>

REQP-31#1 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/conv_0/inst/sub_ln1598_reg_2760_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-165#1 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_2) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-165#2 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_2) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#1 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#2 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#3 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#4 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>


