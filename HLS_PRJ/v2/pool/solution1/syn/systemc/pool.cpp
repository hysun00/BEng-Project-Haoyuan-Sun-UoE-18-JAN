// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int pool::C_S_AXI_DATA_WIDTH = "100000";
const int pool::C_S_AXI_WSTRB_WIDTH = "100";
const int pool::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<128> pool::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_logic pool::ap_const_logic_0 = sc_dt::Log_0;

pool::pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pool_AXILiteS_s_axi_U = new pool_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("pool_AXILiteS_s_axi_U");
    pool_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    pool_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    pool_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    pool_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    pool_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    pool_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    pool_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    pool_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    pool_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    pool_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    pool_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    pool_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    pool_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    pool_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    pool_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    pool_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    pool_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    pool_AXILiteS_s_axi_U->ACLK(ap_clk);
    pool_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    pool_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    pool_AXILiteS_s_axi_U->ap_start(ap_start);
    pool_AXILiteS_s_axi_U->interrupt(interrupt);
    pool_AXILiteS_s_axi_U->ap_ready(ap_ready);
    pool_AXILiteS_s_axi_U->ap_done(ap_done);
    pool_AXILiteS_s_axi_U->ap_idle(ap_idle);
    pool_AXILiteS_s_axi_U->ch_div_K(ch_div_K);
    pool_AXILiteS_s_axi_U->height_in(height_in);
    pool_AXILiteS_s_axi_U->width_in(width_in);
    pool_AXILiteS_s_axi_U->height_out(height_out);
    pool_AXILiteS_s_axi_U->width_out(width_out);
    pool_AXILiteS_s_axi_U->Kx(Kx);
    pool_AXILiteS_s_axi_U->Ky(Ky);
    pool_1D54_U0 = new pool_1D54("pool_1D54_U0");
    pool_1D54_U0->ap_clk(ap_clk);
    pool_1D54_U0->ap_rst(ap_rst_n_inv);
    pool_1D54_U0->ap_start(pool_1D54_U0_ap_start);
    pool_1D54_U0->start_full_n(pool_1D54_U0_start_full_n);
    pool_1D54_U0->ap_done(pool_1D54_U0_ap_done);
    pool_1D54_U0->ap_continue(pool_1D54_U0_ap_continue);
    pool_1D54_U0->ap_idle(pool_1D54_U0_ap_idle);
    pool_1D54_U0->ap_ready(pool_1D54_U0_ap_ready);
    pool_1D54_U0->start_out(pool_1D54_U0_start_out);
    pool_1D54_U0->start_write(pool_1D54_U0_start_write);
    pool_1D54_U0->in_V_V_TDATA(in_V_V_TDATA);
    pool_1D54_U0->in_V_V_TVALID(in_V_V_TVALID);
    pool_1D54_U0->in_V_V_TREADY(pool_1D54_U0_in_V_V_TREADY);
    pool_1D54_U0->ch_div_K(ch_div_K);
    pool_1D54_U0->height_in(height_in);
    pool_1D54_U0->width_in(width_in);
    pool_1D54_U0->Kx(Kx);
    pool_1D54_U0->height_out(height_out);
    pool_1D54_U0->width_out(width_out);
    pool_1D54_U0->Ky(Ky);
    pool_1D54_U0->ch_div_K_out_din(pool_1D54_U0_ch_div_K_out_din);
    pool_1D54_U0->ch_div_K_out_full_n(ch_div_K_c_full_n);
    pool_1D54_U0->ch_div_K_out_write(pool_1D54_U0_ch_div_K_out_write);
    pool_1D54_U0->height_in_out_din(pool_1D54_U0_height_in_out_din);
    pool_1D54_U0->height_in_out_full_n(height_in_c_full_n);
    pool_1D54_U0->height_in_out_write(pool_1D54_U0_height_in_out_write);
    pool_1D54_U0->height_out_out_din(pool_1D54_U0_height_out_out_din);
    pool_1D54_U0->height_out_out_full_n(height_out_c_full_n);
    pool_1D54_U0->height_out_out_write(pool_1D54_U0_height_out_out_write);
    pool_1D54_U0->width_out_out_din(pool_1D54_U0_width_out_out_din);
    pool_1D54_U0->width_out_out_full_n(width_out_c_full_n);
    pool_1D54_U0->width_out_out_write(pool_1D54_U0_width_out_out_write);
    pool_1D54_U0->Ky_out_din(pool_1D54_U0_Ky_out_din);
    pool_1D54_U0->Ky_out_full_n(Ky_c_full_n);
    pool_1D54_U0->Ky_out_write(pool_1D54_U0_Ky_out_write);
    pool_1D54_U0->stream_tp_V_V_din(pool_1D54_U0_stream_tp_V_V_din);
    pool_1D54_U0->stream_tp_V_V_full_n(stream_tp_V_V_full_n);
    pool_1D54_U0->stream_tp_V_V_write(pool_1D54_U0_stream_tp_V_V_write);
    pool_2D_U0 = new pool_2D("pool_2D_U0");
    pool_2D_U0->ap_clk(ap_clk);
    pool_2D_U0->ap_rst(ap_rst_n_inv);
    pool_2D_U0->ap_start(pool_2D_U0_ap_start);
    pool_2D_U0->ap_done(pool_2D_U0_ap_done);
    pool_2D_U0->ap_continue(pool_2D_U0_ap_continue);
    pool_2D_U0->ap_idle(pool_2D_U0_ap_idle);
    pool_2D_U0->ap_ready(pool_2D_U0_ap_ready);
    pool_2D_U0->ch_div_K_dout(ch_div_K_c_dout);
    pool_2D_U0->ch_div_K_empty_n(ch_div_K_c_empty_n);
    pool_2D_U0->ch_div_K_read(pool_2D_U0_ch_div_K_read);
    pool_2D_U0->height_in_dout(height_in_c_dout);
    pool_2D_U0->height_in_empty_n(height_in_c_empty_n);
    pool_2D_U0->height_in_read(pool_2D_U0_height_in_read);
    pool_2D_U0->width_out_dout(width_out_c_dout);
    pool_2D_U0->width_out_empty_n(width_out_c_empty_n);
    pool_2D_U0->width_out_read(pool_2D_U0_width_out_read);
    pool_2D_U0->Ky_dout(Ky_c_dout);
    pool_2D_U0->Ky_empty_n(Ky_c_empty_n);
    pool_2D_U0->Ky_read(pool_2D_U0_Ky_read);
    pool_2D_U0->ch_div_K_out_din(pool_2D_U0_ch_div_K_out_din);
    pool_2D_U0->ch_div_K_out_full_n(ch_div_K_c7_full_n);
    pool_2D_U0->ch_div_K_out_write(pool_2D_U0_ch_div_K_out_write);
    pool_2D_U0->width_out_out_din(pool_2D_U0_width_out_out_din);
    pool_2D_U0->width_out_out_full_n(width_out_c8_full_n);
    pool_2D_U0->width_out_out_write(pool_2D_U0_width_out_out_write);
    pool_2D_U0->stream_tp2_V_V_din(pool_2D_U0_stream_tp2_V_V_din);
    pool_2D_U0->stream_tp2_V_V_full_n(stream_tp2_V_V_full_n);
    pool_2D_U0->stream_tp2_V_V_write(pool_2D_U0_stream_tp2_V_V_write);
    pool_2D_U0->stream_tp_V_V_dout(stream_tp_V_V_dout);
    pool_2D_U0->stream_tp_V_V_empty_n(stream_tp_V_V_empty_n);
    pool_2D_U0->stream_tp_V_V_read(pool_2D_U0_stream_tp_V_V_read);
    hs2axis_U0 = new hs2axis("hs2axis_U0");
    hs2axis_U0->ap_clk(ap_clk);
    hs2axis_U0->ap_rst(ap_rst_n_inv);
    hs2axis_U0->ap_start(hs2axis_U0_ap_start);
    hs2axis_U0->ap_done(hs2axis_U0_ap_done);
    hs2axis_U0->ap_continue(hs2axis_U0_ap_continue);
    hs2axis_U0->ap_idle(hs2axis_U0_ap_idle);
    hs2axis_U0->ap_ready(hs2axis_U0_ap_ready);
    hs2axis_U0->out_r_TDATA(hs2axis_U0_out_r_TDATA);
    hs2axis_U0->out_r_TVALID(hs2axis_U0_out_r_TVALID);
    hs2axis_U0->out_r_TREADY(out_r_TREADY);
    hs2axis_U0->out_r_TLAST(hs2axis_U0_out_r_TLAST);
    hs2axis_U0->ch_div_K_dout(ch_div_K_c7_dout);
    hs2axis_U0->ch_div_K_empty_n(ch_div_K_c7_empty_n);
    hs2axis_U0->ch_div_K_read(hs2axis_U0_ch_div_K_read);
    hs2axis_U0->height_out_dout(height_out_c_dout);
    hs2axis_U0->height_out_empty_n(height_out_c_empty_n);
    hs2axis_U0->height_out_read(hs2axis_U0_height_out_read);
    hs2axis_U0->width_out_dout(width_out_c8_dout);
    hs2axis_U0->width_out_empty_n(width_out_c8_empty_n);
    hs2axis_U0->width_out_read(hs2axis_U0_width_out_read);
    hs2axis_U0->stream_tp2_V_V_dout(stream_tp2_V_V_dout);
    hs2axis_U0->stream_tp2_V_V_empty_n(stream_tp2_V_V_empty_n);
    hs2axis_U0->stream_tp2_V_V_read(hs2axis_U0_stream_tp2_V_V_read);
    ch_div_K_c_U = new fifo_w32_d2_A("ch_div_K_c_U");
    ch_div_K_c_U->clk(ap_clk);
    ch_div_K_c_U->reset(ap_rst_n_inv);
    ch_div_K_c_U->if_read_ce(ap_var_for_const0);
    ch_div_K_c_U->if_write_ce(ap_var_for_const0);
    ch_div_K_c_U->if_din(pool_1D54_U0_ch_div_K_out_din);
    ch_div_K_c_U->if_full_n(ch_div_K_c_full_n);
    ch_div_K_c_U->if_write(pool_1D54_U0_ch_div_K_out_write);
    ch_div_K_c_U->if_dout(ch_div_K_c_dout);
    ch_div_K_c_U->if_empty_n(ch_div_K_c_empty_n);
    ch_div_K_c_U->if_read(pool_2D_U0_ch_div_K_read);
    height_in_c_U = new fifo_w32_d2_A("height_in_c_U");
    height_in_c_U->clk(ap_clk);
    height_in_c_U->reset(ap_rst_n_inv);
    height_in_c_U->if_read_ce(ap_var_for_const0);
    height_in_c_U->if_write_ce(ap_var_for_const0);
    height_in_c_U->if_din(pool_1D54_U0_height_in_out_din);
    height_in_c_U->if_full_n(height_in_c_full_n);
    height_in_c_U->if_write(pool_1D54_U0_height_in_out_write);
    height_in_c_U->if_dout(height_in_c_dout);
    height_in_c_U->if_empty_n(height_in_c_empty_n);
    height_in_c_U->if_read(pool_2D_U0_height_in_read);
    height_out_c_U = new fifo_w32_d3_A("height_out_c_U");
    height_out_c_U->clk(ap_clk);
    height_out_c_U->reset(ap_rst_n_inv);
    height_out_c_U->if_read_ce(ap_var_for_const0);
    height_out_c_U->if_write_ce(ap_var_for_const0);
    height_out_c_U->if_din(pool_1D54_U0_height_out_out_din);
    height_out_c_U->if_full_n(height_out_c_full_n);
    height_out_c_U->if_write(pool_1D54_U0_height_out_out_write);
    height_out_c_U->if_dout(height_out_c_dout);
    height_out_c_U->if_empty_n(height_out_c_empty_n);
    height_out_c_U->if_read(hs2axis_U0_height_out_read);
    width_out_c_U = new fifo_w32_d2_A("width_out_c_U");
    width_out_c_U->clk(ap_clk);
    width_out_c_U->reset(ap_rst_n_inv);
    width_out_c_U->if_read_ce(ap_var_for_const0);
    width_out_c_U->if_write_ce(ap_var_for_const0);
    width_out_c_U->if_din(pool_1D54_U0_width_out_out_din);
    width_out_c_U->if_full_n(width_out_c_full_n);
    width_out_c_U->if_write(pool_1D54_U0_width_out_out_write);
    width_out_c_U->if_dout(width_out_c_dout);
    width_out_c_U->if_empty_n(width_out_c_empty_n);
    width_out_c_U->if_read(pool_2D_U0_width_out_read);
    Ky_c_U = new fifo_w32_d2_A("Ky_c_U");
    Ky_c_U->clk(ap_clk);
    Ky_c_U->reset(ap_rst_n_inv);
    Ky_c_U->if_read_ce(ap_var_for_const0);
    Ky_c_U->if_write_ce(ap_var_for_const0);
    Ky_c_U->if_din(pool_1D54_U0_Ky_out_din);
    Ky_c_U->if_full_n(Ky_c_full_n);
    Ky_c_U->if_write(pool_1D54_U0_Ky_out_write);
    Ky_c_U->if_dout(Ky_c_dout);
    Ky_c_U->if_empty_n(Ky_c_empty_n);
    Ky_c_U->if_read(pool_2D_U0_Ky_read);
    stream_tp_V_V_U = new fifo_w128_d8_A("stream_tp_V_V_U");
    stream_tp_V_V_U->clk(ap_clk);
    stream_tp_V_V_U->reset(ap_rst_n_inv);
    stream_tp_V_V_U->if_read_ce(ap_var_for_const0);
    stream_tp_V_V_U->if_write_ce(ap_var_for_const0);
    stream_tp_V_V_U->if_din(pool_1D54_U0_stream_tp_V_V_din);
    stream_tp_V_V_U->if_full_n(stream_tp_V_V_full_n);
    stream_tp_V_V_U->if_write(pool_1D54_U0_stream_tp_V_V_write);
    stream_tp_V_V_U->if_dout(stream_tp_V_V_dout);
    stream_tp_V_V_U->if_empty_n(stream_tp_V_V_empty_n);
    stream_tp_V_V_U->if_read(pool_2D_U0_stream_tp_V_V_read);
    ch_div_K_c7_U = new fifo_w32_d2_A("ch_div_K_c7_U");
    ch_div_K_c7_U->clk(ap_clk);
    ch_div_K_c7_U->reset(ap_rst_n_inv);
    ch_div_K_c7_U->if_read_ce(ap_var_for_const0);
    ch_div_K_c7_U->if_write_ce(ap_var_for_const0);
    ch_div_K_c7_U->if_din(pool_2D_U0_ch_div_K_out_din);
    ch_div_K_c7_U->if_full_n(ch_div_K_c7_full_n);
    ch_div_K_c7_U->if_write(pool_2D_U0_ch_div_K_out_write);
    ch_div_K_c7_U->if_dout(ch_div_K_c7_dout);
    ch_div_K_c7_U->if_empty_n(ch_div_K_c7_empty_n);
    ch_div_K_c7_U->if_read(hs2axis_U0_ch_div_K_read);
    width_out_c8_U = new fifo_w32_d2_A("width_out_c8_U");
    width_out_c8_U->clk(ap_clk);
    width_out_c8_U->reset(ap_rst_n_inv);
    width_out_c8_U->if_read_ce(ap_var_for_const0);
    width_out_c8_U->if_write_ce(ap_var_for_const0);
    width_out_c8_U->if_din(pool_2D_U0_width_out_out_din);
    width_out_c8_U->if_full_n(width_out_c8_full_n);
    width_out_c8_U->if_write(pool_2D_U0_width_out_out_write);
    width_out_c8_U->if_dout(width_out_c8_dout);
    width_out_c8_U->if_empty_n(width_out_c8_empty_n);
    width_out_c8_U->if_read(hs2axis_U0_width_out_read);
    stream_tp2_V_V_U = new fifo_w128_d2_A("stream_tp2_V_V_U");
    stream_tp2_V_V_U->clk(ap_clk);
    stream_tp2_V_V_U->reset(ap_rst_n_inv);
    stream_tp2_V_V_U->if_read_ce(ap_var_for_const0);
    stream_tp2_V_V_U->if_write_ce(ap_var_for_const0);
    stream_tp2_V_V_U->if_din(pool_2D_U0_stream_tp2_V_V_din);
    stream_tp2_V_V_U->if_full_n(stream_tp2_V_V_full_n);
    stream_tp2_V_V_U->if_write(pool_2D_U0_stream_tp2_V_V_write);
    stream_tp2_V_V_U->if_dout(stream_tp2_V_V_dout);
    stream_tp2_V_V_U->if_empty_n(stream_tp2_V_V_empty_n);
    stream_tp2_V_V_U->if_read(hs2axis_U0_stream_tp2_V_V_read);
    start_for_pool_2DdEe_U = new start_for_pool_2DdEe("start_for_pool_2DdEe_U");
    start_for_pool_2DdEe_U->clk(ap_clk);
    start_for_pool_2DdEe_U->reset(ap_rst_n_inv);
    start_for_pool_2DdEe_U->if_read_ce(ap_var_for_const0);
    start_for_pool_2DdEe_U->if_write_ce(ap_var_for_const0);
    start_for_pool_2DdEe_U->if_din(start_for_pool_2D_U0_din);
    start_for_pool_2DdEe_U->if_full_n(start_for_pool_2D_U0_full_n);
    start_for_pool_2DdEe_U->if_write(pool_1D54_U0_start_write);
    start_for_pool_2DdEe_U->if_dout(start_for_pool_2D_U0_dout);
    start_for_pool_2DdEe_U->if_empty_n(start_for_pool_2D_U0_empty_n);
    start_for_pool_2DdEe_U->if_read(pool_2D_U0_ap_ready);
    start_for_hs2axiseOg_U = new start_for_hs2axiseOg("start_for_hs2axiseOg_U");
    start_for_hs2axiseOg_U->clk(ap_clk);
    start_for_hs2axiseOg_U->reset(ap_rst_n_inv);
    start_for_hs2axiseOg_U->if_read_ce(ap_var_for_const0);
    start_for_hs2axiseOg_U->if_write_ce(ap_var_for_const0);
    start_for_hs2axiseOg_U->if_din(start_for_hs2axis_U0_din);
    start_for_hs2axiseOg_U->if_full_n(start_for_hs2axis_U0_full_n);
    start_for_hs2axiseOg_U->if_write(pool_1D54_U0_start_write);
    start_for_hs2axiseOg_U->if_dout(start_for_hs2axis_U0_dout);
    start_for_hs2axiseOg_U->if_empty_n(start_for_hs2axis_U0_empty_n);
    start_for_hs2axiseOg_U->if_read(hs2axis_U0_ap_ready);

    SC_METHOD(thread_ap_done);
    sensitive << ( hs2axis_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( pool_1D54_U0_ap_idle );
    sensitive << ( pool_2D_U0_ap_idle );
    sensitive << ( hs2axis_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( pool_1D54_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( hs2axis_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( pool_1D54_U0_ap_ready );

    SC_METHOD(thread_hs2axis_U0_ap_continue);

    SC_METHOD(thread_hs2axis_U0_ap_start);
    sensitive << ( start_for_hs2axis_U0_empty_n );

    SC_METHOD(thread_hs2axis_U0_start_full_n);

    SC_METHOD(thread_hs2axis_U0_start_write);

    SC_METHOD(thread_in_V_V_TREADY);
    sensitive << ( pool_1D54_U0_in_V_V_TREADY );

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( hs2axis_U0_out_r_TDATA );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( hs2axis_U0_out_r_TLAST );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( hs2axis_U0_out_r_TVALID );

    SC_METHOD(thread_pool_1D54_U0_ap_continue);

    SC_METHOD(thread_pool_1D54_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_pool_1D54_U0_start_full_n);
    sensitive << ( start_for_pool_2D_U0_full_n );
    sensitive << ( start_for_hs2axis_U0_full_n );

    SC_METHOD(thread_pool_2D_U0_ap_continue);

    SC_METHOD(thread_pool_2D_U0_ap_start);
    sensitive << ( start_for_pool_2D_U0_empty_n );

    SC_METHOD(thread_pool_2D_U0_start_full_n);

    SC_METHOD(thread_pool_2D_U0_start_write);

    SC_METHOD(thread_start_for_hs2axis_U0_din);

    SC_METHOD(thread_start_for_pool_2D_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, in_V_V_TDATA, "(port)in_V_V_TDATA");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, in_V_V_TVALID, "(port)in_V_V_TVALID");
    sc_trace(mVcdFile, in_V_V_TREADY, "(port)in_V_V_TREADY");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ch_div_K, "ch_div_K");
    sc_trace(mVcdFile, height_in, "height_in");
    sc_trace(mVcdFile, width_in, "width_in");
    sc_trace(mVcdFile, height_out, "height_out");
    sc_trace(mVcdFile, width_out, "width_out");
    sc_trace(mVcdFile, Kx, "Kx");
    sc_trace(mVcdFile, Ky, "Ky");
    sc_trace(mVcdFile, pool_1D54_U0_ap_start, "pool_1D54_U0_ap_start");
    sc_trace(mVcdFile, pool_1D54_U0_start_full_n, "pool_1D54_U0_start_full_n");
    sc_trace(mVcdFile, pool_1D54_U0_ap_done, "pool_1D54_U0_ap_done");
    sc_trace(mVcdFile, pool_1D54_U0_ap_continue, "pool_1D54_U0_ap_continue");
    sc_trace(mVcdFile, pool_1D54_U0_ap_idle, "pool_1D54_U0_ap_idle");
    sc_trace(mVcdFile, pool_1D54_U0_ap_ready, "pool_1D54_U0_ap_ready");
    sc_trace(mVcdFile, pool_1D54_U0_start_out, "pool_1D54_U0_start_out");
    sc_trace(mVcdFile, pool_1D54_U0_start_write, "pool_1D54_U0_start_write");
    sc_trace(mVcdFile, pool_1D54_U0_in_V_V_TREADY, "pool_1D54_U0_in_V_V_TREADY");
    sc_trace(mVcdFile, pool_1D54_U0_ch_div_K_out_din, "pool_1D54_U0_ch_div_K_out_din");
    sc_trace(mVcdFile, pool_1D54_U0_ch_div_K_out_write, "pool_1D54_U0_ch_div_K_out_write");
    sc_trace(mVcdFile, pool_1D54_U0_height_in_out_din, "pool_1D54_U0_height_in_out_din");
    sc_trace(mVcdFile, pool_1D54_U0_height_in_out_write, "pool_1D54_U0_height_in_out_write");
    sc_trace(mVcdFile, pool_1D54_U0_height_out_out_din, "pool_1D54_U0_height_out_out_din");
    sc_trace(mVcdFile, pool_1D54_U0_height_out_out_write, "pool_1D54_U0_height_out_out_write");
    sc_trace(mVcdFile, pool_1D54_U0_width_out_out_din, "pool_1D54_U0_width_out_out_din");
    sc_trace(mVcdFile, pool_1D54_U0_width_out_out_write, "pool_1D54_U0_width_out_out_write");
    sc_trace(mVcdFile, pool_1D54_U0_Ky_out_din, "pool_1D54_U0_Ky_out_din");
    sc_trace(mVcdFile, pool_1D54_U0_Ky_out_write, "pool_1D54_U0_Ky_out_write");
    sc_trace(mVcdFile, pool_1D54_U0_stream_tp_V_V_din, "pool_1D54_U0_stream_tp_V_V_din");
    sc_trace(mVcdFile, pool_1D54_U0_stream_tp_V_V_write, "pool_1D54_U0_stream_tp_V_V_write");
    sc_trace(mVcdFile, pool_2D_U0_ap_start, "pool_2D_U0_ap_start");
    sc_trace(mVcdFile, pool_2D_U0_ap_done, "pool_2D_U0_ap_done");
    sc_trace(mVcdFile, pool_2D_U0_ap_continue, "pool_2D_U0_ap_continue");
    sc_trace(mVcdFile, pool_2D_U0_ap_idle, "pool_2D_U0_ap_idle");
    sc_trace(mVcdFile, pool_2D_U0_ap_ready, "pool_2D_U0_ap_ready");
    sc_trace(mVcdFile, pool_2D_U0_ch_div_K_read, "pool_2D_U0_ch_div_K_read");
    sc_trace(mVcdFile, pool_2D_U0_height_in_read, "pool_2D_U0_height_in_read");
    sc_trace(mVcdFile, pool_2D_U0_width_out_read, "pool_2D_U0_width_out_read");
    sc_trace(mVcdFile, pool_2D_U0_Ky_read, "pool_2D_U0_Ky_read");
    sc_trace(mVcdFile, pool_2D_U0_ch_div_K_out_din, "pool_2D_U0_ch_div_K_out_din");
    sc_trace(mVcdFile, pool_2D_U0_ch_div_K_out_write, "pool_2D_U0_ch_div_K_out_write");
    sc_trace(mVcdFile, pool_2D_U0_width_out_out_din, "pool_2D_U0_width_out_out_din");
    sc_trace(mVcdFile, pool_2D_U0_width_out_out_write, "pool_2D_U0_width_out_out_write");
    sc_trace(mVcdFile, pool_2D_U0_stream_tp2_V_V_din, "pool_2D_U0_stream_tp2_V_V_din");
    sc_trace(mVcdFile, pool_2D_U0_stream_tp2_V_V_write, "pool_2D_U0_stream_tp2_V_V_write");
    sc_trace(mVcdFile, pool_2D_U0_stream_tp_V_V_read, "pool_2D_U0_stream_tp_V_V_read");
    sc_trace(mVcdFile, hs2axis_U0_ap_start, "hs2axis_U0_ap_start");
    sc_trace(mVcdFile, hs2axis_U0_ap_done, "hs2axis_U0_ap_done");
    sc_trace(mVcdFile, hs2axis_U0_ap_continue, "hs2axis_U0_ap_continue");
    sc_trace(mVcdFile, hs2axis_U0_ap_idle, "hs2axis_U0_ap_idle");
    sc_trace(mVcdFile, hs2axis_U0_ap_ready, "hs2axis_U0_ap_ready");
    sc_trace(mVcdFile, hs2axis_U0_out_r_TDATA, "hs2axis_U0_out_r_TDATA");
    sc_trace(mVcdFile, hs2axis_U0_out_r_TVALID, "hs2axis_U0_out_r_TVALID");
    sc_trace(mVcdFile, hs2axis_U0_out_r_TLAST, "hs2axis_U0_out_r_TLAST");
    sc_trace(mVcdFile, hs2axis_U0_ch_div_K_read, "hs2axis_U0_ch_div_K_read");
    sc_trace(mVcdFile, hs2axis_U0_height_out_read, "hs2axis_U0_height_out_read");
    sc_trace(mVcdFile, hs2axis_U0_width_out_read, "hs2axis_U0_width_out_read");
    sc_trace(mVcdFile, hs2axis_U0_stream_tp2_V_V_read, "hs2axis_U0_stream_tp2_V_V_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ch_div_K_c_full_n, "ch_div_K_c_full_n");
    sc_trace(mVcdFile, ch_div_K_c_dout, "ch_div_K_c_dout");
    sc_trace(mVcdFile, ch_div_K_c_empty_n, "ch_div_K_c_empty_n");
    sc_trace(mVcdFile, height_in_c_full_n, "height_in_c_full_n");
    sc_trace(mVcdFile, height_in_c_dout, "height_in_c_dout");
    sc_trace(mVcdFile, height_in_c_empty_n, "height_in_c_empty_n");
    sc_trace(mVcdFile, height_out_c_full_n, "height_out_c_full_n");
    sc_trace(mVcdFile, height_out_c_dout, "height_out_c_dout");
    sc_trace(mVcdFile, height_out_c_empty_n, "height_out_c_empty_n");
    sc_trace(mVcdFile, width_out_c_full_n, "width_out_c_full_n");
    sc_trace(mVcdFile, width_out_c_dout, "width_out_c_dout");
    sc_trace(mVcdFile, width_out_c_empty_n, "width_out_c_empty_n");
    sc_trace(mVcdFile, Ky_c_full_n, "Ky_c_full_n");
    sc_trace(mVcdFile, Ky_c_dout, "Ky_c_dout");
    sc_trace(mVcdFile, Ky_c_empty_n, "Ky_c_empty_n");
    sc_trace(mVcdFile, stream_tp_V_V_full_n, "stream_tp_V_V_full_n");
    sc_trace(mVcdFile, stream_tp_V_V_dout, "stream_tp_V_V_dout");
    sc_trace(mVcdFile, stream_tp_V_V_empty_n, "stream_tp_V_V_empty_n");
    sc_trace(mVcdFile, ch_div_K_c7_full_n, "ch_div_K_c7_full_n");
    sc_trace(mVcdFile, ch_div_K_c7_dout, "ch_div_K_c7_dout");
    sc_trace(mVcdFile, ch_div_K_c7_empty_n, "ch_div_K_c7_empty_n");
    sc_trace(mVcdFile, width_out_c8_full_n, "width_out_c8_full_n");
    sc_trace(mVcdFile, width_out_c8_dout, "width_out_c8_dout");
    sc_trace(mVcdFile, width_out_c8_empty_n, "width_out_c8_empty_n");
    sc_trace(mVcdFile, stream_tp2_V_V_full_n, "stream_tp2_V_V_full_n");
    sc_trace(mVcdFile, stream_tp2_V_V_dout, "stream_tp2_V_V_dout");
    sc_trace(mVcdFile, stream_tp2_V_V_empty_n, "stream_tp2_V_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_pool_2D_U0_din, "start_for_pool_2D_U0_din");
    sc_trace(mVcdFile, start_for_pool_2D_U0_full_n, "start_for_pool_2D_U0_full_n");
    sc_trace(mVcdFile, start_for_pool_2D_U0_dout, "start_for_pool_2D_U0_dout");
    sc_trace(mVcdFile, start_for_pool_2D_U0_empty_n, "start_for_pool_2D_U0_empty_n");
    sc_trace(mVcdFile, start_for_hs2axis_U0_din, "start_for_hs2axis_U0_din");
    sc_trace(mVcdFile, start_for_hs2axis_U0_full_n, "start_for_hs2axis_U0_full_n");
    sc_trace(mVcdFile, start_for_hs2axis_U0_dout, "start_for_hs2axis_U0_dout");
    sc_trace(mVcdFile, start_for_hs2axis_U0_empty_n, "start_for_hs2axis_U0_empty_n");
    sc_trace(mVcdFile, pool_2D_U0_start_full_n, "pool_2D_U0_start_full_n");
    sc_trace(mVcdFile, pool_2D_U0_start_write, "pool_2D_U0_start_write");
    sc_trace(mVcdFile, hs2axis_U0_start_full_n, "hs2axis_U0_start_full_n");
    sc_trace(mVcdFile, hs2axis_U0_start_write, "hs2axis_U0_start_write");
#endif

    }
    mHdltvinHandle.open("pool.hdltvin.dat");
    mHdltvoutHandle.open("pool.hdltvout.dat");
}

pool::~pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pool_AXILiteS_s_axi_U;
    delete pool_1D54_U0;
    delete pool_2D_U0;
    delete hs2axis_U0;
    delete ch_div_K_c_U;
    delete height_in_c_U;
    delete height_out_c_U;
    delete width_out_c_U;
    delete Ky_c_U;
    delete stream_tp_V_V_U;
    delete ch_div_K_c7_U;
    delete width_out_c8_U;
    delete stream_tp2_V_V_U;
    delete start_for_pool_2DdEe_U;
    delete start_for_hs2axiseOg_U;
}

void pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pool::thread_ap_done() {
    ap_done = hs2axis_U0_ap_done.read();
}

void pool::thread_ap_idle() {
    ap_idle = (pool_1D54_U0_ap_idle.read() & pool_2D_U0_ap_idle.read() & hs2axis_U0_ap_idle.read());
}

void pool::thread_ap_ready() {
    ap_ready = pool_1D54_U0_ap_ready.read();
}

void pool::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pool::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void pool::thread_ap_sync_done() {
    ap_sync_done = hs2axis_U0_ap_done.read();
}

void pool::thread_ap_sync_ready() {
    ap_sync_ready = pool_1D54_U0_ap_ready.read();
}

void pool::thread_hs2axis_U0_ap_continue() {
    hs2axis_U0_ap_continue = ap_const_logic_1;
}

void pool::thread_hs2axis_U0_ap_start() {
    hs2axis_U0_ap_start = start_for_hs2axis_U0_empty_n.read();
}

void pool::thread_hs2axis_U0_start_full_n() {
    hs2axis_U0_start_full_n = ap_const_logic_1;
}

void pool::thread_hs2axis_U0_start_write() {
    hs2axis_U0_start_write = ap_const_logic_0;
}

void pool::thread_in_V_V_TREADY() {
    in_V_V_TREADY = pool_1D54_U0_in_V_V_TREADY.read();
}

void pool::thread_out_r_TDATA() {
    out_r_TDATA = hs2axis_U0_out_r_TDATA.read();
}

void pool::thread_out_r_TLAST() {
    out_r_TLAST = hs2axis_U0_out_r_TLAST.read();
}

void pool::thread_out_r_TVALID() {
    out_r_TVALID = hs2axis_U0_out_r_TVALID.read();
}

void pool::thread_pool_1D54_U0_ap_continue() {
    pool_1D54_U0_ap_continue = ap_const_logic_1;
}

void pool::thread_pool_1D54_U0_ap_start() {
    pool_1D54_U0_ap_start = ap_start.read();
}

void pool::thread_pool_1D54_U0_start_full_n() {
    pool_1D54_U0_start_full_n = (start_for_pool_2D_U0_full_n.read() & start_for_hs2axis_U0_full_n.read());
}

void pool::thread_pool_2D_U0_ap_continue() {
    pool_2D_U0_ap_continue = ap_const_logic_1;
}

void pool::thread_pool_2D_U0_ap_start() {
    pool_2D_U0_ap_start = start_for_pool_2D_U0_empty_n.read();
}

void pool::thread_pool_2D_U0_start_full_n() {
    pool_2D_U0_start_full_n = ap_const_logic_1;
}

void pool::thread_pool_2D_U0_start_write() {
    pool_2D_U0_start_write = ap_const_logic_0;
}

void pool::thread_start_for_hs2axis_U0_din() {
    start_for_hs2axis_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void pool::thread_start_for_pool_2D_U0_din() {
    start_for_pool_2D_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void pool::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_V_TDATA\" :  \"" << in_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_V_TVALID\" :  \"" << in_V_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_V_TREADY\" :  \"" << in_V_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

