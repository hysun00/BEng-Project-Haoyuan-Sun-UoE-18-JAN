#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_AXI_F_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_F_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_F_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_AXI_F_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_F_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_AXI_F_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_AXI_F_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_AXI_F_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_AXI_F_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_AXI_F_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_AXI_F_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_AXI_F_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_AXI_F_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_F_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_F_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_F_WDATA", 128, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_AXI_F_WSTRB", 16, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_AXI_F_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_AXI_F_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_F_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_F_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_F_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_F_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_AXI_F_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_F_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_AXI_F_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_AXI_F_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_AXI_F_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_AXI_F_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_AXI_F_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_AXI_F_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_AXI_F_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_AXI_F_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_F_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_F_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_F_RDATA", 128, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_AXI_F_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_AXI_F_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_F_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_F_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_AXI_F_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_F_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_F_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_AXI_F_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_F_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_W_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_W_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_W_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_AXI_W_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_W_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_AXI_W_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_AXI_W_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_AXI_W_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_AXI_W_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_AXI_W_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_AXI_W_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_AXI_W_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_AXI_W_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_W_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_W_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_W_WDATA", 128, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_AXI_W_WSTRB", 16, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_AXI_W_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_AXI_W_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_W_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_W_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_W_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_W_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_AXI_W_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_W_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_AXI_W_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_AXI_W_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_AXI_W_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_AXI_W_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_AXI_W_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_AXI_W_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_AXI_W_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_AXI_W_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_W_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_W_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_W_RDATA", 128, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_AXI_W_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_AXI_W_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_W_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_AXI_W_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_AXI_W_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_AXI_W_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_AXI_W_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_AXI_W_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_AXI_W_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_AWADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_gmem_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_AWLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_gmem_AWSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_gmem_AWBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_gmem_AWLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_gmem_AWCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_gmem_AWPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_gmem_AWQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_gmem_AWREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_gmem_AWUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_WDATA", 32, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_gmem_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_gmem_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_WUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_ARADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_gmem_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_ARLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_gmem_ARSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_gmem_ARBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_gmem_ARLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_gmem_ARCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_gmem_ARPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_gmem_ARQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_gmem_ARREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_gmem_ARUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_RDATA", 32, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_gmem_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_gmem_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_RUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_gmem_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_gmem_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_gmem_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_gmem_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_gmem_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_gmem_BUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "conv";
